#!/bin/bash
set -e

export FORCE_COLOR=1

if [ -x ".env" ]; then
  set -a
  . ./.env
  set +a
fi;

if [ "$TEST_DATABASE_URL" == "" ]; then
  echo "ERROR: No test database configured; aborting"
  echo
  echo "To resolve this, ensure environmental variable TEST_DATABASE_URL is set"
  exit 1;
fi;

# Import latest schema (throw on error)
psql -Xqv ON_ERROR_STOP=1 "$TEST_DATABASE_URL" <<HERE
drop schema if exists a, b, c, d cascade;
drop role if exists postgraphile_test_authenticator;
drop role if exists postgraphile_test_user1;
drop role if exists postgraphile_test_user2;
drop role if exists postgraphile_test_visitor;
create role postgraphile_test_authenticator noinherit login password 'testpassword';
create role postgraphile_test_visitor noinherit;
create role postgraphile_test_user1;
create role postgraphile_test_user2;
grant postgraphile_test_visitor to postgraphile_test_user1;
grant postgraphile_test_visitor to postgraphile_test_user2;
grant postgraphile_test_user1 to postgraphile_test_authenticator;
grant postgraphile_test_user2 to postgraphile_test_authenticator;
HERE
psql -Xqv ON_ERROR_STOP=1 -f __tests__/kitchen-sink-schema.sql "$TEST_DATABASE_URL"
psql -Xqv ON_ERROR_STOP=1 -f __tests__/kitchen-sink-permissions.sql "$TEST_DATABASE_URL"

SERVER_VERSION_NUM=$(psql -Xqtv ON_ERROR_STOP=1 -c "show server_version_num;" "$TEST_DATABASE_URL")

if [ $SERVER_VERSION_NUM -ge 100000 ]; then
  psql -Xqv ON_ERROR_STOP=1 -f __tests__/partitioned-schema.sql "$TEST_DATABASE_URL"
fi;

if [ $SERVER_VERSION_NUM -ge 110000 ]; then
  psql -Xqv ON_ERROR_STOP=1 -f __tests__/pg11-schema.sql "$TEST_DATABASE_URL"
fi;

clear
echo "Database reset successfully âœ…"

# Now run the tests
if [ $SERVER_VERSION_NUM -ge 110000 ]; then
  jest --forceExit -i $@
elif [ $SERVER_VERSION_NUM -lt 100000 ] && [ $SERVER_VERSION_NUM -ge 90500 ]; then
  jest --forceExit -i -t "^((?!partitioned).)*$" $@
elif [ $SERVER_VERSION_NUM -ge 90500 ]; then
  jest --forceExit -i -t "^((?!pg11|partitioned).)*$" $@
else
  jest --forceExit -i -t "^((?!pg11|partitioned|json-overflow).)*$" $@
fi;

# Finally re-populate the database to aid debugging
psql -Xqv ON_ERROR_STOP=1 -f __tests__/kitchen-sink-data.sql "$TEST_DATABASE_URL"

if [ $SERVER_VERSION_NUM -ge 110000 ]; then
  psql -Xqv ON_ERROR_STOP=1 -f __tests__/pg11-data.sql "$TEST_DATABASE_URL"
fi;
